{"version":3,"sources":["components/Button/Button.jsx","components/FeedbackOption/FeetbackOption.jsx","components/Static/Static.jsx","components/Section/Section.jsx","components/App.js","index.js","components/Button/Button.module.css","components/Static/Static.module.css","components/Section/Section.module.css"],"names":["Button","nameBtn","onLeaveFeedback","className","s","button","onClick","type","FeedbackOptions","options","map","Static","good","neutral","bad","total","positivePercentage","staticTitle","Section","title","children","mainTitle","App","state","handleClickButton","setState","Object","values","this","reduce","acc","stat","Math","round","countTotalFeedback","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iRAoBeA,EAhBA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzB,OACE,wBACEC,UAAWC,IAAEC,OACbC,QAAS,kBAAMJ,EAAgBD,IAC/BM,KAAK,SAHP,SAKGN,KCGQO,EAVS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASP,EAAZ,EAAYA,gBAAZ,OACtBO,EAAQC,KAAI,SAACT,GAAD,OACV,cAAC,EAAD,CAAsBA,QAASA,EAASC,gBAAiBA,GAA5CD,O,gBCwBFU,EA1BA,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC3C,OACE,qCACE,oBAAIb,UAAWC,IAAEa,YAAjB,wBACCF,EACC,qCACE,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,UAGF,sD,gBCFOE,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIjB,UAAWC,IAAEiB,UAAjB,SAA6BF,IAC5BC,MC2CcE,E,4MACnBC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAcPU,kBAAoB,SAACvB,GACnB,EAAKwB,SAAL,eAAiBxB,EAAU,EAAKsB,MAAMtB,GAAW,K,wDAZnD,WACE,OAAOyB,OAAOC,OAAOC,KAAKL,OAAOM,QAAO,SAACC,EAAKC,GAE5C,OADAD,GAAOC,IAEN,K,6CAGL,WACE,OAAOC,KAAKC,MAAOL,KAAKL,MAAMX,KAAOgB,KAAKM,qBAAwB,O,oBAOpE,WACE,MAA+BN,KAAKL,MAA5BX,EAAR,EAAQA,KAAME,EAAd,EAAcA,IAAKD,EAAnB,EAAmBA,QACnB,OACE,eAAC,EAAD,CAASM,MAAM,wBAAf,UACE,cAAC,EAAD,CACEV,QAASiB,OAAOS,KAAKP,KAAKL,OAC1BrB,gBAAiB0B,KAAKJ,oBAExB,cAAC,EAAD,CACEZ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,KAAKM,qBACZlB,mBAAoBY,KAAKQ,2C,GAnCFC,aC7CjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,yB,kBCA3BD,EAAOC,QAAU,CAAC,YAAc,8B,kBCAhCD,EAAOC,QAAU,CAAC,UAAY,8B","file":"static/js/main.f40e3f48.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from \"./Button.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ nameBtn, onLeaveFeedback }) => {\r\n  return (\r\n    <button\r\n      className={s.button}\r\n      onClick={() => onLeaveFeedback(nameBtn)}\r\n      type=\"button\"\r\n    >\r\n      {nameBtn}\r\n    </button>\r\n  );\r\n};\r\nButton.propTypes = {\r\n  nameBtn: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\r\n  options.map((nameBtn) => (\r\n    <Button key={nameBtn} nameBtn={nameBtn} onLeaveFeedback={onLeaveFeedback} />\r\n  ));\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport s from \"./Static.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Static = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <h2 className={s.staticTitle}>Statistics</h2>\r\n      {total ? (\r\n        <>\r\n          <p>Good: {good}</p>\r\n          <p>Neutral: {neutral}</p>\r\n          <p>Bad: {bad}</p>\r\n          <p>Total: {total}</p>\r\n          <p>Positive feedback: {positivePercentage}%</p>\r\n        </>\r\n      ) : (\r\n        <p>No feedback given</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nStatic.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Static;\r\n","import React from \"react\";\r\nimport s from \"./Section.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1 className={s.mainTitle}>{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\nexport default Section;\r\n","// import React, { Component } from \"react\";\n// import FeedBackOption from \"./FeedbackOption/FeetbackOption\";\n// import Static from \"./Static/Static\";\n// import Section from \"./Section/Section.jsx\";\n\n// export default class App extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n//   countTotalFeedback() {\n//     return Object.values(this.state).reduce((acc, stat) => {\n//       acc += stat;\n//       return acc;\n//     }, 0);\n//   }\n\n//   countPositiveFeedbackPercentage() {\n//     return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n//   }\n\n//   handleClickButton = (nameBtn) => {\n//     this.setState({ [nameBtn]: this.state[nameBtn] + 1 });\n//   };\n//   render() {\n//     const { good, bad, neutral } = this.state;\n//     return (\n//       <Section title=\"Please leave your feedback\">\n//         <FeedBackOption\n//           option={Object.keys(this.state)}\n//           leaveFeedback={this.handleClickButton}\n//         />\n//         <Static\n//           good={good}\n//           neutral={neutral}\n//           bad={bad}\n//           total={this.countTotalFeedback()}\n//           positivePercentage={this.countPositiveFeedbackPercentage()}\n//         />\n//       </Section>\n//     );\n//   }\n// }\n\nimport React, { Component } from \"react\";\nimport FeedbackOptions from \"./FeedbackOption/FeetbackOption.jsx\";\nimport Statistics from \"./Static/Static.jsx\";\nimport Section from \"./Section/Section\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, stat) => {\n      acc += stat;\n      return acc;\n    }, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  }\n\n  handleClickButton = (nameBtn) => {\n    this.setState({ [nameBtn]: this.state[nameBtn] + 1 });\n  };\n\n  render() {\n    const { good, bad, neutral } = this.state;\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.handleClickButton}\n        />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3Bmi5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"staticTitle\":\"Static_staticTitle__uxNp-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"Section_mainTitle__391Mp\"};"],"sourceRoot":""}